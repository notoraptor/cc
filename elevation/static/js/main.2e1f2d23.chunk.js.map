{"version":3,"sources":["contexts/AppContext.js","components/AutoCompletionItem.js","components/search.js","api/callAutocomplete.js","api/cancelablePromise.js","api/geotag.js","components/GoogleView.js","api/googleMapLocationControl.js","api/googleMapElevationControl.js","components/AddressManager.js","App.js","serviceWorker.js","index.js"],"names":["voidFunction","AppContextInstance","pageLoader","google","this","geocoder","maps","Geocoder","autocomplete","places","AutocompleteService","locationToAddress","bind","addressToLocation","position","Promise","resolve","reject","geocode","latLng","results","status","GeocoderStatus","OK","formatted_address","address","geometry","location","AppContext","React","createContext","AutoCompletionItem","props","active","className","onClick","value","Component","Search","state","submitting","windowGotFocus","onInputFocus","onInputBlur","onAddressChanged","onKeyDown","onSubmitAddress","choosePlace","hasPlaces","onCompletionFocus","onCompletionBlur","turnSubmittingFlag","setWindowFocus","unsetWindowFocus","setState","event","onChange","search","autocompleteHasFocus","target","update","error","currentFocus","then","googleContext","onresult","onerror","addressForUrl","getQueryPredictions","input","predictions","PlacesServiceStatus","descriptions","forEach","prediction","push","description","Error","callAutocomplete","context","console","log","nbPlaces","length","preventDefault","addressChanged","keyCode","onSelect","elemId","caretPos","element","document","getElementById","createTextRange","range","move","select","undefined","selectionStart","setSelectionRange","focus","setCaretPosition","id","onSubmit","autoComplete","htmlFor","icon","SearchIcon","type","placeholder","onFocus","onBlur","onMouseEnter","onMouseLeave","map","place","i","key","window","addEventListener","removeEventListener","contextType","CancelablePromise","promise","isCanceled","val","cancel","geolocationError","message","samePositions","pos1","pos2","lat","lng","GoogleView","currentAddress","currentMarker","streetPositionIsManual","elevator","defaultPosition","currentCircle","flood","zone","geolocation","userAddress","displayStreet","displayMap","markMapOn","centerMap","centerStreet","getUserLocation","getElevation","onMapClick","computeElevationAlongPath","getStreetView","getVisible","setVisible","query","nearLocation","request","fields","locationBias","Circle","center","radius","findPlaceFromQuery","setMap","Marker","displayUserRegions","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","addListener","d2m","d","m2d","m","defineRectangle","previousLatitude","previousLongitude","north","Math","random","west","south","east","nbFlood","round","bounds","Rectangle","top","spherical","computeOffset","right","bottom","left","editable","ev","panTo","setPosition","Map","zoom","streetViewControl","PlacesService","ElevationService","getLocation","searchAddress","streetControl","createElement","classList","add","textContent","index","getPosition","controls","ControlPosition","TOP_LEFT","geolocationControl","title","ReactDOM","render","xmlns","width","height","viewBox","RIGHT_CENTER","addGoogleMapLocationControl","elevationControl","addGoogleMapElevationControl","streetIsVisible","LatLng","catch","_createMapOn","guessInitialLocation","prevProps","prevState","snapshot","cancelablePromise","navigator","getCurrentPosition","coords","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","latitude","longitude","exception","finally","from","to","nSamples","getElevationAlongPath","path","samples","coordinates","getElevationForLocations","locations","getBounds","northEast","getNorthEast","southWest","getSouthWest","northWest","southEast","latStep","abs","lngStep","points","side","previousPoint","previousLat","previousLng","div","computeElevationForCoordinates","output","values","result","elevation","domLink","setAttribute","encodeURIComponent","JSON","stringify","style","display","body","appendChild","click","removeChild","alert","AddressManager","selectedAddress","onSearchChange","onSelectSearchAddress","onSelectMapAddress","newState","App","loadGoogleContext","Provider","async","defer","url","process","onLoad","Boolean","hostname","match","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2e1f2d23.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction voidFunction() {}\r\n\r\nexport class AppContextInstance {\r\n\tconstructor(pageLoader, google) {\r\n\t\tthis.pageLoader = pageLoader || voidFunction;\r\n\t\tthis.google = google || null;\r\n\t\tthis.geocoder = google ? new google.maps.Geocoder() : null;\r\n\t\tthis.autocomplete = google ? new google.maps.places.AutocompleteService() : null;\r\n\t\tthis.locationToAddress = this.locationToAddress.bind(this);\r\n\t\tthis.addressToLocation = this.addressToLocation.bind(this);\r\n\t}\r\n\r\n\tlocationToAddress(position) {\r\n\t\t// resolve(address)\r\n\t\t// reject(status)\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis.geocoder.geocode({latLng: position}, (results, status) => {\r\n\t\t\t\tif (status === this.google.maps.GeocoderStatus.OK)\r\n\t\t\t\t\tresolve(results[0].formatted_address);\r\n\t\t\t\telse\r\n\t\t\t\t\treject(status);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\taddressToLocation(address) {\r\n\t\t// resolve(latLngObject)\r\n\t\t// reject(status)\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis.geocoder.geocode({address: address}, (results, status) => {\r\n\t\t\t\tif (status === this.google.maps.GeocoderStatus.OK)\r\n\t\t\t\t\tresolve(results[0].geometry.location);\r\n\t\t\t\telse\r\n\t\t\t\t\treject(status);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport const AppContext = React.createContext(new AppContextInstance(null, null));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class AutoCompletionItem extends React.Component {\r\n\trender() {\r\n\t\t// autocomplete-active\r\n\t\treturn (\r\n\t\t\t<div {...(this.props.active ? {className: 'autocomplete-active'} : {})}\r\n\t\t\t\t {...(this.props.onClick ? {onClick: this.props.onClick} : {})}>\r\n\t\t\t\t{this.props.value}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nAutoCompletionItem.propTypes = {\r\n\tvalue: PropTypes.string.isRequired,\r\n\tactive: PropTypes.bool.isRequired,\r\n\tonClick: PropTypes.func\r\n};\r\n","import React from \"react\";\r\nimport {AppContext} from \"../contexts/AppContext\";\r\nimport Octicon, {Search as SearchIcon} from '@primer/octicons-react';\r\nimport {callAutocomplete} from \"../api/callAutocomplete\";\r\nimport {AutoCompletionItem} from \"./AutoCompletionItem\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction setCaretPosition(elemId, caretPos) {\r\n\t// Reference (2019/06/13): https://stackoverflow.com/a/512542\r\n\tvar element = document.getElementById(elemId);\r\n\tif (!element)\r\n\t\treturn;\r\n\tif (element.createTextRange) {\r\n\t\tvar range = element.createTextRange();\r\n\t\trange.move('character', caretPos);\r\n\t\trange.select();\r\n\t} else if (element.selectionStart !== undefined) {\r\n\t\telement.setSelectionRange(caretPos, caretPos);\r\n\t} else {\r\n\t\telement.focus();\r\n\t}\r\n}\r\n\r\nexport class Search extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsubmitting: false,\r\n\t\t\twindowGotFocus: false,\r\n\t\t};\r\n\t\tthis.onInputFocus = this.onInputFocus.bind(this);\r\n\t\tthis.onInputBlur = this.onInputBlur.bind(this);\r\n\t\tthis.onAddressChanged = this.onAddressChanged.bind(this);\r\n\t\tthis.onKeyDown = this.onKeyDown.bind(this);\r\n\t\tthis.onSubmitAddress = this.onSubmitAddress.bind(this);\r\n\t\tthis.choosePlace = this.choosePlace.bind(this);\r\n\t\tthis.hasPlaces = this.hasPlaces.bind(this);\r\n\t\tthis.onCompletionFocus = this.onCompletionFocus.bind(this);\r\n\t\tthis.onCompletionBlur = this.onCompletionBlur.bind(this);\r\n\t\tthis.turnSubmittingFlag = this.turnSubmittingFlag.bind(this);\r\n\t\tthis.setWindowFocus = this.setWindowFocus.bind(this);\r\n\t\tthis.unsetWindowFocus = this.unsetWindowFocus.bind(this);\r\n\t}\r\n\r\n\tsetState(state) {\r\n\t\treturn new Promise(resolve => super.setState(state, resolve));\r\n\t}\r\n\r\n\tturnSubmittingFlag() {\r\n\t\treturn this.setState({submitting: !this.state.submitting});\r\n\t}\r\n\r\n\tonInputFocus(event) {\r\n\t\tif (this.state.windowGotFocus) {\r\n\t\t\tthis.unsetWindowFocus();\r\n\t\t} else {\r\n\t\t\tthis.props.onChange({autocomplete: true});\r\n\t\t}\r\n\t}\r\n\r\n\tonInputBlur() {\r\n\t\tif (!this.props.search.autocompleteHasFocus)\r\n\t\t\tthis.props.onChange({autocomplete: false});\r\n\t}\r\n\r\n\tonCompletionFocus() {\r\n\t\tthis.props.onChange({autocompleteHasFocus: true});\r\n\t}\r\n\r\n\tonCompletionBlur() {\r\n\t\tthis.props.onChange({autocompleteHasFocus: false});\r\n\t}\r\n\r\n\tonAddressChanged(event) {\r\n\t\tconst value = event.target.value;\r\n\t\tconst update = {address: value, error: '', currentFocus: -1, autocomplete: true};\r\n\t\tif (!value)\r\n\t\t\tupdate.places = [];\r\n\t\tthis.props.onChange(update).then(() => {\r\n\t\t\tif (value) {\r\n\t\t\t\tcallAutocomplete(value, this.context, results => {\r\n\t\t\t\t\tthis.props.onChange({places: results});\r\n\t\t\t\t}, error => {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\tthis.props.onChange({places: []});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tonKeyDown(event) {\r\n\t\tif (!this.hasPlaces())\r\n\t\t\treturn;\r\n\t\tconst nbPlaces = this.props.search.places.length;\r\n\t\tlet preventDefault = false;\r\n\t\tlet addressChanged = false;\r\n\t\tlet address = this.props.search.address;\r\n\t\tlet currentFocus = this.props.search.currentFocus;\r\n\t\tlet autocomplete = this.props.search.autocomplete;\r\n\t\tlet autocompleteHasFocus = this.props.search.autocompleteHasFocus;\r\n\t\tif (event.keyCode === 13) { // enter\r\n\t\t\t/*If the ENTER key is pressed, prevent the form from being submitted,*/\r\n\t\t\tconsole.log('ENTER');\r\n\t\t\tif (autocomplete && currentFocus !== -1) {\r\n\t\t\t\taddress = this.props.search.places[currentFocus];\r\n\t\t\t\taddressChanged = preventDefault = true;\r\n\t\t\t}\r\n\t\t\tautocomplete = autocompleteHasFocus = false;\r\n\t\t} else if (event.keyCode === 27) { // escape\r\n\t\t\tconsole.log('ESCAPE');\r\n\t\t\tautocomplete = autocompleteHasFocus = false;\r\n\t\t} else if (event.keyCode === 40) { // down\r\n\t\t\tconsole.log('DOWN');\r\n\t\t\t/*If the arrow DOWN key is pressed, increase the currentFocus variable:*/\r\n\t\t\t++currentFocus;\r\n\t\t\tif (currentFocus >= nbPlaces)\r\n\t\t\t\tcurrentFocus = 0;\r\n\t\t\tautocomplete = preventDefault = true;\r\n\t\t} else if (event.keyCode === 38) { //up\r\n\t\t\tconsole.log('UP');\r\n\t\t\t/*If the arrow UP key is pressed, decrease the currentFocus variable:*/\r\n\t\t\t--currentFocus;\r\n\t\t\tif (currentFocus < 0)\r\n\t\t\t\tcurrentFocus = nbPlaces - 1;\r\n\t\t\tautocomplete = preventDefault = true;\r\n\t\t}\r\n\t\tif (preventDefault)\r\n\t\t\tevent.preventDefault();\r\n\t\tthis.props.onChange({\r\n\t\t\taddress: address,\r\n\t\t\tcurrentFocus: currentFocus,\r\n\t\t\tautocomplete: autocomplete,\r\n\t\t\tautocompleteHasFocus: autocompleteHasFocus\r\n\t\t}).then(() => {\r\n\t\t\tif (addressChanged && this.props.onSelect)\r\n\t\t\t\tthis.props.onSelect(address);\r\n\t\t});\r\n\t}\r\n\r\n\tonSubmitAddress(event) {\r\n\t\tevent.preventDefault();\r\n\t\tsetCaretPosition('inputAddress', 0);\r\n\t}\r\n\r\n\tchoosePlace(currentFocus) {\r\n\t\tconst address = this.props.search.places[currentFocus];\r\n\t\tthis.props.onChange({\r\n\t\t\taddress: address,\r\n\t\t\tcurrentFocus: currentFocus,\r\n\t\t\tautocomplete: false,\r\n\t\t\tautocompleteHasFocus: false\r\n\t\t});\r\n\t\tif (this.props.onSelect)\r\n\t\t\tthis.props.onSelect(address);\r\n\t}\r\n\r\n\thasPlaces() {\r\n\t\treturn this.props.search.places.length > 0 && (this.props.search.places.length !== 1 || this.props.search.places[0] !== this.props.search.address);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst address = this.props.search.address;\r\n\t\treturn (\r\n\t\t\t<div className=\"search\">\r\n\t\t\t\t<form id=\"search-form\" onSubmit={this.onSubmitAddress} autoComplete=\"off\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-md\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"inputAddress\" className=\"sr-only\">Address</label>\r\n\t\t\t\t\t\t\t<Octicon icon={SearchIcon}/>\r\n\t\t\t\t\t\t\t<div className=\"autocomplete\">\r\n\t\t\t\t\t\t\t\t<input className=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t   id=\"inputAddress\"\r\n\t\t\t\t\t\t\t\t\t   type=\"text\"\r\n\t\t\t\t\t\t\t\t\t   placeholder=\"Search an address\"\r\n\t\t\t\t\t\t\t\t\t   value={address}\r\n\t\t\t\t\t\t\t\t\t   onFocus={this.onInputFocus}\r\n\t\t\t\t\t\t\t\t\t   onBlur={this.onInputBlur}\r\n\t\t\t\t\t\t\t\t\t   onKeyDown={this.onKeyDown}\r\n\t\t\t\t\t\t\t\t\t   onChange={this.onAddressChanged}/>\r\n\t\t\t\t\t\t\t\t{this.props.search.autocomplete && this.hasPlaces() ? (\r\n\t\t\t\t\t\t\t\t\t<div id=\"autocomplete-list\"\r\n\t\t\t\t\t\t\t\t\t\t onMouseEnter={this.onCompletionFocus}\r\n\t\t\t\t\t\t\t\t\t\t onMouseLeave={this.onCompletionBlur}\r\n\t\t\t\t\t\t\t\t\t\t className=\"autocomplete-items\">\r\n\t\t\t\t\t\t\t\t\t\t{this.props.search.places.map((place, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<AutoCompletionItem active={this.props.search.currentFocus === i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.choosePlace(i)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={place}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}/>))}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t) : ''\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tsetWindowFocus() {\r\n\t\tthis.setState({windowGotFocus: true});\r\n\t}\r\n\r\n\tunsetWindowFocus() {\r\n\t\tthis.setState({windowGotFocus: false});\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\twindow.addEventListener('focus', this.setWindowFocus);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\twindow.removeEventListener('focus', this.setWindowFocus);\r\n\t}\r\n}\r\n\r\nSearch.contextType = AppContext;\r\nSearch.propTypes = {\r\n\tsearch: PropTypes.object.isRequired,\r\n\tonChange: PropTypes.func.isRequired,\r\n\tonSelect: PropTypes.func.isRequired\r\n};\r\n","export function callAutocomplete(address, googleContext, onresult, onerror) {\r\n\tconst addressForUrl = address;\r\n\t// Add a random string at the end to prevent browser for using the cache.\r\n\tgoogleContext.autocomplete.getQueryPredictions({input: addressForUrl}, (predictions, status) => {\r\n\t\tif (status !== googleContext.google.maps.places.PlacesServiceStatus.OK) {\r\n\t\t\tif (onerror)\r\n\t\t\t\tonerror(new Error(`Unable to get autocompletion for ${addressForUrl}. Status ${status}.`));\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst descriptions = [];\r\n\t\tpredictions.forEach(function (prediction) {\r\n\t\t\tdescriptions.push(prediction.description);\r\n\t\t\tif (onresult) {\r\n\t\t\t\tonresult(descriptions);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n}\r\n","// Inspired from: https://reactjs.org/blog/2015/12/16/ismounted-antipattern.html\r\n\r\nexport class CancelablePromise {\r\n\tconstructor(promise) {\r\n\t\tthis.isCanceled = false;\r\n\t\tthis.promise = new Promise((resolve, reject) => {\r\n\t\t\tpromise.then(\r\n\t\t\t\tval => this.isCanceled ? reject({isCanceled: true}) : resolve(val),\r\n\t\t\t\terror => this.isCanceled ? reject({isCanceled: true}) : reject(error)\r\n\t\t\t);\r\n\t\t});\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t}\r\n\r\n\tcancel() {\r\n\t\tthis.isCanceled = true;\r\n\t}\r\n}\r\n","function geolocationError(message) {\r\n\treturn {geolocationError: message};\r\n}\r\n\r\nexport function geotag() {\r\n\t// resolve(coords)\r\n\t// reject(errorMessage)\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (\"geolocation\" in navigator) {\r\n\t\t\tnavigator.geolocation.getCurrentPosition(function (position) {\r\n\t\t\t\tresolve(position.coords);\r\n\t\t\t}, function (error) {\r\n\t\t\t\tlet message = null;\r\n\t\t\t\tswitch (error.code) {\r\n\t\t\t\t\tcase error.PERMISSION_DENIED:\r\n\t\t\t\t\t\tmessage = \"Geolocation is not allowed in your browser.\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase error.POSITION_UNAVAILABLE:\r\n\t\t\t\t\t\tmessage = \"Location information is unavailable.\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase error.TIMEOUT:\r\n\t\t\t\t\t\tmessage = \"The request to get user location timed out.\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase error.UNKNOWN_ERROR:\r\n\t\t\t\t\t\tmessage = \"An unknown error occurred.\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tmessage = \"An error occurred without any error code.\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treject(geolocationError(message));\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treject(geolocationError(\"Geolocation is not available in your browser.\"));\r\n\t\t}\r\n\t});\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {AppContext} from \"../contexts/AppContext\";\r\nimport {addGoogleMapLocationControl} from \"../api/googleMapLocationControl\";\r\nimport {addGoogleMapElevationControl} from \"../api/googleMapElevationControl\";\r\nimport {CancelablePromise} from \"../api/cancelablePromise\";\r\nimport {geotag} from \"../api/geotag\";\r\n\r\nfunction samePositions(pos1, pos2) {\r\n\treturn pos1.lat() === pos2.lat() && pos1.lng() === pos2.lng();\r\n}\r\n\r\nexport class GoogleView extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.currentAddress = null;\r\n\t\tthis.currentMarker = null;\r\n\t\tthis.streetPositionIsManual = false;\r\n\t\tthis.map = null;\r\n\t\tthis.places = null;\r\n\t\tthis.elevator = null;\r\n\t\tthis.defaultPosition = null;\r\n\t\tthis.currentCircle = null;\r\n\t\tthis.flood = [];\r\n\t\tthis.zone = null;\r\n\t\tthis.geolocation = null;\r\n\t\tthis.userAddress = null;\r\n\t\tthis.displayStreet = this.displayStreet.bind(this);\r\n\t\tthis.displayMap = this.displayMap.bind(this);\r\n\t\tthis.markMapOn = this.markMapOn.bind(this);\r\n\t\tthis.centerMap = this.centerMap.bind(this);\r\n\t\tthis.centerStreet = this.centerStreet.bind(this);\r\n\t\tthis.getUserLocation = this.getUserLocation.bind(this);\r\n\t\tthis.getElevation = this.getElevation.bind(this);\r\n\t\tthis.onMapClick = this.onMapClick.bind(this);\r\n\t\tthis.computeElevationAlongPath = this.computeElevationAlongPath.bind(this);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <div id=\"google-map-view\" className=\"my-4 flex-grow-1\"/>;\r\n\t}\r\n\r\n\tstreetIsVisible() {\r\n\t\treturn this.map.getStreetView().getVisible();\r\n\t}\r\n\r\n\tdisplayStreet() {\r\n\t\tconsole.log(`Displaying street.`);\r\n\t\tthis.streetPositionIsManual = true;\r\n\t\tthis.map.getStreetView().setVisible(true);\r\n\t}\r\n\r\n\tdisplayMap() {\r\n\t\tthis.map.getStreetView().setVisible(false);\r\n\t}\r\n\r\n\tsearchAddress(query, nearLocation) {\r\n\t\t// resolve(address)\r\n\t\t// reject(status)\r\n\t\tconst google = this.context.google;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst request = {\r\n\t\t\t\tquery: query,\r\n\t\t\t\tfields: ['formatted_address', 'geometry', 'name'],\r\n\t\t\t\tlocationBias: new google.maps.Circle({\r\n\t\t\t\t\tcenter: nearLocation,\r\n\t\t\t\t\tradius: 10\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\t\tthis.places.findPlaceFromQuery(request, (results, status) => {\r\n\t\t\t\tif (status === google.maps.places.PlacesServiceStatus.OK && results.length)\r\n\t\t\t\t\tresolve(results[0].formatted_address);\r\n\t\t\t\telse\r\n\t\t\t\t\treject(status);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tmarkMapOn(position) {\r\n\t\tconst google = this.context.google;\r\n\t\tif (this.currentMarker) {\r\n\t\t\tthis.currentMarker.setMap(null);\r\n\t\t\tthis.currentMarker = null;\r\n\t\t}\r\n\t\t// if (!this.props.displayUserRegions || !samePositions(position, this.geolocation))\r\n\t\tthis.currentMarker = new google.maps.Marker({position: position, map: this.map});\r\n\t\tif (this.currentCircle) {\r\n\t\t\tthis.currentCircle.setMap(null);\r\n\t\t\tthis.currentCircle = null;\r\n\t\t}\r\n\t\tif (this.props.displayUserRegions && samePositions(position, this.geolocation)) {\r\n\t\t\tthis.currentCircle = new google.maps.Circle({\r\n\t\t\t\tstrokeColor: '#00FF00',\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeWeight: 2,\r\n\t\t\t\tfillColor: '#00FF00',\r\n\t\t\t\tfillOpacity: 0.35,\r\n\t\t\t\tmap: this.map,\r\n\t\t\t\tcenter: position,\r\n\t\t\t\tradius: 300, // in meters\r\n\t\t\t});\r\n\t\t\tthis.currentCircle.addListener('click', this.onMapClick);\r\n\t\t}\r\n\t\t// Clean previous flood.\r\n\t\tif (this.flood.length) {\r\n\t\t\tfor (let rectangle of this.flood) {\r\n\t\t\t\trectangle.setMap(null);\r\n\t\t\t}\r\n\t\t\tthis.flood = [];\r\n\t\t}\r\n\r\n\t\tif (this.zone) {\r\n\t\t\tthis.zone.setMap(null);\r\n\t\t\tthis.zone = null;\r\n\t\t}\r\n\r\n\t\tconst d2m = function (d) {\r\n\t\t\treturn d * (40000 * 1000) / 360;\r\n\t\t};\r\n\r\n\t\tconst m2d = function (m) {\r\n\t\t\treturn m * 360 / (40000 * 1000);\r\n\t\t};\r\n\r\n\t\tconst defineRectangle = function (previousLatitude, previousLongitude) {\r\n\t\t\tconst north = previousLatitude + (Math.random() < 0.5 ? -1 : 1) * m2d(Math.random() * 150 + 50);\r\n\t\t\tconst west = previousLongitude + (Math.random() < 0.5 ? -1 : 1) * m2d(Math.random() * 150 + 50);\r\n\t\t\treturn {\r\n\t\t\t\tnorth: north,\r\n\t\t\t\tsouth: north + m2d(200),\r\n\t\t\t\twest: west,\r\n\t\t\t\teast: west + m2d(200) * 1.5,\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\t// Draw next flood.\r\n\t\tif (this.props.displayUserRegions && samePositions(position, this.geolocation)) {\r\n\t\t\tconst nbFlood = Math.round(Math.random() * 50 + 50);\r\n\t\t\tconsole.log(`Displaying ${nbFlood} flood regions.`);\r\n\t\t\tlet bounds = null;\r\n\t\t\tfor (let i = 0; i < nbFlood; ++i) {\r\n\t\t\t\tlet lat = null;\r\n\t\t\t\tlet lng = null;\r\n\t\t\t\tif (bounds) {\r\n\t\t\t\t\tlat = bounds.north;\r\n\t\t\t\t\tlng = bounds.west;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlat = m2d(d2m(position.lat()) + 300);\r\n\t\t\t\t\tlng = m2d(d2m(position.lng()) + 300);\r\n\t\t\t\t}\r\n\t\t\t\tbounds = defineRectangle(lat, lng);\r\n\t\t\t\tthis.flood.push(new google.maps.Rectangle({\r\n\t\t\t\t\t\tstrokeColor: '#33ccff',\r\n\t\t\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\t\t\tstrokeWeight: 2,\r\n\t\t\t\t\t\tfillColor: '#33ccff',\r\n\t\t\t\t\t\tfillOpacity: 0.35,\r\n\t\t\t\t\t\tmap: this.map,\r\n\t\t\t\t\t\tbounds: bounds\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst top = google.maps.geometry.spherical.computeOffset(position, 500, 0);\r\n\t\t\tconst right = google.maps.geometry.spherical.computeOffset(position, 500, 90);\r\n\t\t\tconst bottom = google.maps.geometry.spherical.computeOffset(position, 500, 180);\r\n\t\t\tconst left = google.maps.geometry.spherical.computeOffset(position, 500, 270);\r\n\t\t\tthis.zone = new google.maps.Rectangle({\r\n\t\t\t\tstrokeColor: '#33ccff',\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeWeight: 2,\r\n\t\t\t\tfillColor: '#33ccff',\r\n\t\t\t\tfillOpacity: 0.35,\r\n\t\t\t\tmap: this.map,\r\n\t\t\t\tbounds: {north: top.lat(), south: bottom.lat(), east: right.lng(), west: left.lng()},\r\n\t\t\t\teditable: false\r\n\t\t\t});\r\n\t\t\tthis.zone.addListener('click', this.onMapClick);\r\n\t\t}\r\n\t}\r\n\r\n\tonMapClick(ev) {\r\n\t\tconst position = ev.latLng;\r\n\t\tthis.centerMap(position);\r\n\t\tthis.context.locationToAddress(position)\r\n\t\t\t.then(address => {\r\n\t\t\t\tthis.currentAddress = address;\r\n\t\t\t\tthis.props.onSelect(address)\r\n\t\t\t});\r\n\t}\r\n\r\n\tcenterMap(position) {\r\n\t\tconsole.log(`Centering map to ${position.lat()} ; ${position.lng()}`);\r\n\t\tthis.markMapOn(position);\r\n\t\tthis.map.panTo(position);\r\n\t}\r\n\r\n\tcenterStreet(position) {\r\n\t\tconsole.log(`Centering street to ${position.lat()} ; ${position.lng()}`);\r\n\t\tthis.streetPositionIsManual = true;\r\n\t\tthis.map.getStreetView().setPosition(position);\r\n\t}\r\n\r\n\t_createMapOn(defaultPosition) {\r\n\t\tconst google = this.context.google;\r\n\t\tthis.map = new google.maps.Map(document.getElementById('google-map-view'), {\r\n\t\t\tcenter: defaultPosition,\r\n\t\t\tzoom: 15,\r\n\t\t\tstreetViewControl: false,\r\n\t\t});\r\n\t\tthis.places = new google.maps.places.PlacesService(this.map);\r\n\t\tthis.elevator = new google.maps.ElevationService();\r\n\t\tthis.map.addListener('click', this.onMapClick);\r\n\t\tthis.map.getStreetView().addListener('position_changed', () => {\r\n\t\t\tif (this.streetPositionIsManual) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconsole.log(`Handling changed position on street.`);\r\n\t\t\tconst location = this.map.getStreetView().getLocation();\r\n\t\t\tthis.centerMap(location.latLng);\r\n\t\t\tthis.searchAddress(location.description, location.latLng)\r\n\t\t\t\t.then(address => {\r\n\t\t\t\t\tthis.currentAddress = address;\r\n\t\t\t\t\tthis.props.onSelect(address)\r\n\t\t\t\t});\r\n\t\t});\r\n\t\tconst streetControl = document.createElement('div');\r\n\t\tstreetControl.classList.add('google-map-street-button');\r\n\t\tstreetControl.textContent = 'Street';\r\n\t\tstreetControl.index = 1;\r\n\t\tstreetControl.addEventListener('click', () => {\r\n\t\t\tif (this.currentMarker) {\r\n\t\t\t\tconst position = this.currentMarker.getPosition();\r\n\t\t\t\tthis.centerStreet(position);\r\n\t\t\t\tthis.displayStreet();\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.map.controls[google.maps.ControlPosition.TOP_LEFT].push(streetControl);\r\n\t\taddGoogleMapLocationControl(google, this.map, this.getUserLocation);\r\n\t\taddGoogleMapElevationControl(google, this.map, this.getElevation);\r\n\t\tdocument.getElementById('google-map-view').addEventListener('click', () => {\r\n\t\t\tif (this.streetIsVisible()) {\r\n\t\t\t\tconsole.log(`Clicked on street!`);\r\n\t\t\t\tthis.streetPositionIsManual = false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// Initialization.\r\n\t\tconst google = this.context.google;\r\n\t\t// Use Montreal coordinates as default coordinates.\r\n\t\tconst defaultPosition = new google.maps.LatLng(45.505331312, -73.55249779);\r\n\t\tthis.defaultPosition = defaultPosition;\r\n\t\tif (this.props.address) {\r\n\t\t\tthis.context.addressToLocation(this.props.address)\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tconsole.log(`Error while location for address ${this.props.address}:`, error);\r\n\t\t\t\t\treturn this.defaultPosition;\r\n\t\t\t\t})\r\n\t\t\t\t.then(position => {\r\n\t\t\t\t\tthis.currentAddress = this.props.address;\r\n\t\t\t\t\tthis._createMapOn(position);\r\n\t\t\t\t\tthis.centerMap(position);\r\n\t\t\t\t\tthis.centerStreet(position);\r\n\t\t\t\t\tthis.displayMap();\r\n\t\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis._createMapOn(defaultPosition);\r\n\t\t\tthis.displayMap();\r\n\t\t\tif (this.props.guessInitialLocation) {\r\n\t\t\t\tthis.getUserLocation();\r\n\t\t\t} else {\r\n\t\t\t\tthis.centerMap(defaultPosition);\r\n\t\t\t\tthis.centerStreet(defaultPosition);\r\n\t\t\t\tthis.context.locationToAddress(defaultPosition)\r\n\t\t\t\t\t.then(address => {\r\n\t\t\t\t\t\tthis.currentAddress = address;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tif (!this.props.address\r\n\t\t\t|| prevProps.address === this.props.address\r\n\t\t\t|| this.currentAddress === this.props.address)\r\n\t\t\treturn;\r\n\t\tthis.context.addressToLocation(this.props.address)\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log(`Error while location for address ${this.props.address}:`, error);\r\n\t\t\t\treturn this.defaultPosition;\r\n\t\t\t})\r\n\t\t\t.then(position => {\r\n\t\t\t\tthis.currentAddress = this.props.address;\r\n\t\t\t\tif (this.streetIsVisible())\r\n\t\t\t\t\tthis.centerStreet(position);\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.centerMap(position);\r\n\t\t\t})\r\n\t}\r\n\r\n\tgetUserLocation() {\r\n\t\tif (this.cancelablePromise)\r\n\t\t\treturn;\r\n\t\tthis.cancelablePromise = new CancelablePromise(geotag());\r\n\t\tthis.cancelablePromise\r\n\t\t\t.promise\r\n\t\t\t.then((coords) => {\r\n\t\t\t\tif (!this.streetIsVisible()) {\r\n\t\t\t\t\tconsole.log(`Geolocation returned ${coords.latitude} ${coords.longitude}`);\r\n\t\t\t\t\tconst position = new this.context.google.maps.LatLng(coords.latitude, coords.longitude);\r\n\t\t\t\t\tthis.geolocation = position;\r\n\t\t\t\t\tthis.centerMap(position);\r\n\t\t\t\t\tthis.context.locationToAddress(position)\r\n\t\t\t\t\t\t.then(address => {\r\n\t\t\t\t\t\t\tthis.currentAddress = address;\r\n\t\t\t\t\t\t\tthis.userAddress = address;\r\n\t\t\t\t\t\t\tthis.props.onSelect(address);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tif ('isCanceled' in error) {\r\n\t\t\t\t\tconsole.error('Geolocation was canceled.');\r\n\t\t\t\t} else if (\"geolocationError\" in error) {\r\n\t\t\t\t\tconsole.error(`Geolocation error. ${error.geolocationError}`);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(`Error when getting user location.`);\r\n\t\t\t\t\tconsole.exception(error);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tthis.cancelablePromise = null;\r\n\t\t\t});\r\n\t}\r\n\r\n\tcomputeElevationAlongPath(from, to, nSamples) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis.elevator.getElevationAlongPath(\r\n\t\t\t\t{path: [from, to], samples: nSamples},\r\n\t\t\t\t(results, status) => {\r\n\t\t\t\t\tif (status !== 'OK')\r\n\t\t\t\t\t\treturn reject(status);\r\n\t\t\t\t\tif (results.length !== nSamples)\r\n\t\t\t\t\t\treturn reject(`ERROR_SAMPLES`);\r\n\t\t\t\t\tresolve(results);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tcomputeElevationForCoordinates(coordinates) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis.elevator.getElevationForLocations(\r\n\t\t\t\t{locations: coordinates},\r\n\t\t\t\t(results, status) => {\r\n\t\t\t\t\tif (status !== 'OK')\r\n\t\t\t\t\t\treturn reject(status);\r\n\t\t\t\t\tif (results.length !== coordinates.length)\r\n\t\t\t\t\t\treturn reject(`ERROR_SAMPLES`);\r\n\t\t\t\t\tresolve(results);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tgetElevation() {\r\n\t\tif (this.zone) {\r\n\t\t\tconst google = this.context.google;\r\n\t\t\tconst bounds = this.zone.getBounds();\r\n\t\t\tconst northEast = bounds.getNorthEast();\r\n\t\t\tconst southWest = bounds.getSouthWest();\r\n\t\t\tconst northWest = new google.maps.LatLng(northEast.lat(), southWest.lng());\r\n\t\t\tconst southEast = new google.maps.LatLng(southWest.lat(), northEast.lng());\r\n\r\n\t\t\tconst div = 20; // split 20 times => 50 meters of resolution in 1 kilometer\r\n\t\t\tconst latGap = Math.abs(southWest.lat() - northWest.lat());\r\n\t\t\tconst lngGap = Math.abs(southEast.lng() - southWest.lng());\r\n\t\t\tconst latStep = -(latGap / div);\r\n\t\t\tconst lngStep = lngGap / div;\r\n\t\t\tconst side = div + 1;\r\n\t\t\tconst nbPoints = side * side;\r\n\t\t\tconst points = [northWest];\r\n\t\t\tfor (let i = 1; i < nbPoints; ++i) {\r\n\t\t\t\tconst previousPoint = points[points.length - 1];\r\n\t\t\t\tconst previousLat = previousPoint.lat();\r\n\t\t\t\tconst previousLng = previousPoint.lng();\r\n\t\t\t\tconst lat = i % side === 0 ? previousLat + latStep : previousLat;\r\n\t\t\t\tconst lng = i % side === 0 ? northWest.lng() : previousLng + lngStep;\r\n\t\t\t\tpoints.push(new google.maps.LatLng(lat, lng));\r\n\t\t\t}\r\n\t\t\tconsole.log(`Computed ${points.length} points.`);\r\n\t\t\tconsole.log(`Latest point: ${points[points.length - 1]} vs expected ${southEast}`);\r\n\t\t\tthis.computeElevationForCoordinates(points)\r\n\t\t\t\t.then(results => {\r\n\t\t\t\t\tconst output = {\r\n\t\t\t\t\t\twidth: side,\r\n\t\t\t\t\t\theight: side,\r\n\t\t\t\t\t\tvalues: results.map(result => [\r\n\t\t\t\t\t\t\tresult.location.lat(),\r\n\t\t\t\t\t\t\tresult.location.lng(),\r\n\t\t\t\t\t\t\tresult.elevation,\r\n\t\t\t\t\t\t])\r\n\t\t\t\t\t};\r\n\t\t\t\t\tconst domLink = document.createElement('a');\r\n\t\t\t\t\tdomLink.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(JSON.stringify(output)));\r\n\t\t\t\t\tdomLink.setAttribute('download', `elevation.json`);\r\n\t\t\t\t\tdomLink.style.display = 'none';\r\n\t\t\t\t\tdocument.body.appendChild(domLink);\r\n\t\t\t\t\tdomLink.click();\r\n\t\t\t\t\tdocument.body.removeChild(domLink);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tconst message = `An error occurred while computing elevation (${error}).`;\r\n\t\t\t\t\tconsole.exception(message);\r\n\t\t\t\t\talert(message);\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tif (this.cancelablePromise)\r\n\t\t\tthis.cancelablePromise.cancel();\r\n\t}\r\n}\r\n\r\nGoogleView.contextType = AppContext;\r\nGoogleView.propTypes = {\r\n\taddress: PropTypes.string.isRequired,\r\n\tonSelect: PropTypes.func.isRequired,\r\n\tguessInitialLocation: PropTypes.bool,\r\n\tdisplayUserRegions: PropTypes.bool\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport function addGoogleMapLocationControl(google, map, onClick) {\r\n\tconst geolocationControl = document.createElement('div');\r\n\tgeolocationControl.title = 'Center near my current location';\r\n\tgeolocationControl.classList.add('google-map-geolocation-button');\r\n\tgeolocationControl.index = 1;\r\n\tgeolocationControl.addEventListener('click', onClick);\r\n\t// Mylocation icon reference: (2019/09/04) https://www.materialui.co/icon/my-location\r\n\tReactDOM.render((\r\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n\t\t\t<path d=\"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"/>\r\n\t\t</svg>\r\n\t), geolocationControl);\r\n\tmap.controls[google.maps.ControlPosition.RIGHT_CENTER].push(geolocationControl);\r\n}\r\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\n\nexport function addGoogleMapElevationControl(google, map, onClick) {\n\tconst elevationControl = document.createElement('div');\n\televationControl.title = 'Download elevation';\n\televationControl.classList.add('google-map-geolocation-button');\n\televationControl.classList.add('google-map-elevation-button');\n\televationControl.index = 1;\n\televationControl.addEventListener('click', onClick);\n\t// Mylocation icon reference: (2019/09/04) https://www.materialui.co/icon/my-location\n\t// Mylocation icon reference: (2019/09/17) https://www.materialui.co/icon/terrain\n\tReactDOM.render((\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M14 6l-3.75 5 2.85 3.8-1.6 1.2C9.81 13.75 7 10 7 10l-6 8h22L14 6z\"/></svg>\n\t), elevationControl);\n\tmap.controls[google.maps.ControlPosition.RIGHT_CENTER].push(elevationControl);\n}\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Search} from \"./search\";\r\nimport {GoogleView} from \"./GoogleView\";\r\n\r\n\r\nexport class AddressManager extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t// search\r\n\t\t\taddress: '',\r\n\t\t\tplaces: [],\r\n\t\t\tcurrentFocus: -1,\r\n\t\t\tautocomplete: true,\r\n\t\t\tautocompleteHasFocus: false,\r\n\t\t\terror: '',\r\n\t\t\t// address manager\r\n\t\t\tselectedAddress: '',\r\n\t\t};\r\n\t\tthis.onSearchChange = this.onSearchChange.bind(this);\r\n\t\tthis.onSelectSearchAddress = this.onSelectSearchAddress.bind(this);\r\n\t\tthis.onSelectMapAddress = this.onSelectMapAddress.bind(this);\r\n\t}\r\n\r\n\tsetState(state) {\r\n\t\treturn new Promise(resolve => super.setState(state, resolve));\r\n\t}\r\n\r\n\tonSelectMapAddress(address) {\r\n\t\tconsole.log(`Selected from map: ${address}`);\r\n\t\treturn this.setState({selectedAddress: address, address: address, error: ''});\r\n\t}\r\n\r\n\tonSelectSearchAddress(address) {\r\n\t\tconsole.log(`Selected from search; ${address}`);\r\n\t\treturn this.setState({selectedAddress: address, error: ''});\r\n\t}\r\n\r\n\tonSearchChange(newState) {\r\n\t\treturn this.setState(newState);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"d-flex flex-column h-100\">\r\n\t\t\t\t<Search search={this.state}\r\n\t\t\t\t\t\tonChange={this.onSearchChange}\r\n\t\t\t\t\t\tonSelect={this.onSelectSearchAddress}/>\r\n\t\t\t\t{this.state.error ? <div className=\"error-message pt-4 px-2\">{this.state.error}</div> : ''}\r\n\t\t\t\t<GoogleView address={this.state.selectedAddress}\r\n\t\t\t\t\t\t\tonSelect={this.onSelectMapAddress}\r\n\t\t\t\t\t\t\tguessInitialLocation={this.props.guessInitialLocation}\r\n\t\t\t\t\t\t\tdisplayUserRegions={this.props.displayUserRegions}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nAddressManager.propTypes = {\r\n\tguessInitialLocation: PropTypes.bool,\r\n\tdisplayUserRegions: PropTypes.bool\r\n};\r\n","import React from 'react';\nimport {AppContext, AppContextInstance} from \"./contexts/AppContext\";\nimport {Helmet} from 'react-helmet-async';\nimport {AddressManager} from \"./components/AddressManager\";\nimport Script from 'react-load-script';\n\nexport class App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcontext: new AppContextInstance(null, null)\n\t\t};\n\t\tthis.loadGoogleContext = this.loadGoogleContext.bind(this);\n\t}\n\n\tloadGoogleContext() {\n\t\tthis.setState({context: new AppContextInstance(this.pageLoader, window.google)});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<AppContext.Provider value={this.state.context}>\n\t\t\t\t{this.state.context.google ? (\n\t\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t\t<Helmet><title>Elevation Picker</title></Helmet>\n\t\t\t\t\t\t<div className=\"d-flex flex-column w-100 h-100\">\n\t\t\t\t\t\t\t<h1 className=\"text-center\">Elevation Picker</h1>\n\t\t\t\t\t\t\t<div className=\"flex-grow-1 map-container\">\n\t\t\t\t\t\t\t\t<AddressManager/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) : ''}\n\t\t\t\t<Script async defer\n\t\t\t\t\t\turl={`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_API_KEY}&libraries=places,geometry`}\n\t\t\t\t\t\tonLoad={this.loadGoogleContext}/>\n\t\t\t</AppContext.Provider>\n\t\t);\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport {App} from './App';\nimport {HelmetProvider} from \"react-helmet-async\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<HelmetProvider><App/></HelmetProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}